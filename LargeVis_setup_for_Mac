# How to get LargeVis up and running on a Mac

1. My first problem was that I was using Python 3.6 through Anaconda, but LargeVis only supports Python 2.7.  So to fix this, in Anaconda I simply set up a new 2.7 environment, and then launched a Python 2.7 env terminal.

2. Within the Python 2.7 environment terminal window, execute this command: "brew install gsl".

3. In the Linux subfolder, there is another subfolder named ANNOY.  Open this folder (not in the terminal) and then open up the annoylib.h file in some kind of code editor (Atom, RStudio, etc.) and find line 347 and change "lseek64" to "lseek". Save the new annoylib.h file changes.

4. After downloading all the LargeVis files from the GitHub page, within the same Python 2.7 terminal window you can navigate using "cd" change directory commands to the "Linux" subfolder within the main "LargeVis-master" folder.

5. While in the "Linux" subfolder directory, compile the LargeVis source files using the following command: 
    "g++ LargeVis.cpp main.cpp -o LargeVis -lm -pthread -lgsl -lgslcblas -Ofast -march=native -ffast-math -L/usr/local/lib -        I/usr/local/include"
    
6. Install the Python wrapper with the following command in the same Python 2.7 terminal and in the same "Linux" directory:         "sudo python setup.py install"

7. The second major problem I had was that when I finally got the Python wrapper execution command to produce a 2-D txt output file (i.e. the LargeVis algorithm ran successfully), the plot.py script broke on me.  So the LargeVis authors (of Microsoft Asia who co-authored the LargeVis paper) helped me out here by email correspondence and said to open the plot.py file in "LargeVis-master" (I used the Atom editor), and switch out line 2: 
    
    "import matplotlib.pyplot as plt", 
    
    for the following instead: 
    
    "import matplotlib
     matplotlib.use('Agg')
     from matplotlib import pyplot as plt"
     
8. Save the new changes to the plot.py file (I also moved the changed plot.py file under the "Linux" subfolder), and now you can execute the LargeVis algorithm using either the C++ command:

    "./LargeVis -input test_ECFP_a.txt -output output_ECFP_a_vec2D.txt -threads 8"
    
    or the Python wrapper:
    
    "python LargeVis_run.py -input test_ECFP_a.txt -output output_ECFP_a_vec2D.txt -threads 8"
    
(must be executed within the Python 2.7 env terminal, NOT an iPython/Jupyter notebook cell)

(IMPORTANT: the input file must be located in the same file directory as LargeVis_run.py in order for it to work, so I just moved the iPython notebook "ECFP Preprocessing Notebook.ipynb" also into the "Linux" subfolder, along with the        ugiSmiles100000aECFP.csv file, so that it produced its binarized txt file (test_ECFP_a.txt) right there into the Linux folder and LargeVis would pick it up upon execution)

9. Finally, once the LargeVis algorithm has completed (the nice thing about it is that it has a percentage countdown feature so you can tell how far along the computation is at any moment), run the Python plot command, also in the Python 2.7 terminal window:
    "python plot.py -input output_ECFP_a_vec2D.txt -label labels_ECFP_a.txt -output plot_ECFP_a"
